1. "bike.csv" 데이터를 불러오시오.
(단, [season], [holiday], [workingday], [weather] 변수는 문자형으로 지정하시오.) 

2. 더미변수로 의심되는 변수를 찾아 해당 변수의 이름을 기술하시오.
 ->  statics summary (min, max, count 확인) 와 string summary를 써서  string의 num_of_distinct 확인할 것!
3. [temp] 변수의 평균 값을 반올림하여 소수점 첫 째 자리까지 기술하시오.
[query executor]
select season, round(AVG(temp), 1) as temp_avg from group by season
(단, 변수명은 [season]과 [temp_avg]로 할 것)


4. [holiday] 변수가 1이면서, [workingday] 변수가 1인 데이터의 개수를 기술하시오.
[filter] 혹은 [query executor] 사용
없다...


5. [count] 변수는 [casual]과 [registered] 변수의 합이라고 한다. 이를 증명하시오.
[add fuction column]


6. [count] 변수의 상위 1% 값 보다 큰 값을 이상치로 간주하고자 한다. 상위 1% 값을 구하시오.
(단, 반올림하여 소수 둘 째 짜리까지 기술한다.)
[statics summary]->percentile check -> 99
774.15

7. 6번에서 기술한 값을 기반으로 [count] 변수의 상위 1%를 초과하는 값을 상위 1%값으로 치환하고 이를 count_99 라는 이름의 변수에 저장하시오.
[add function column] -> case when count ? 774.15 then 774.15 else count end

8. 요일변수 [wday]를 생성하시오.
[query executor] -> select date(substr(datetime, 1, 10)) as date, load.* from dddd as load
[query executor] -> select strftime('%w', date) as wday, df.* from ddd as df

9. 요일별 [casual]값의 평균의 차이를 알아보는 검정을 실시하고 해당 검정의 통계량을 반올림하여 소수점 첫 째 자리까지 기술하시오.
[ANOVA]
  casual / wday
206.0 (205.9744334149202)

10. 요일별 [registered]값의 평균의 차이를 알아보는 검정을 실시하고 해당 검정의 통계량을 반올림하여 소수점 첫 째 자리까지 기술하시오.
[ANOVA]
  registered / wday
 25.7

11. 9번과, 10번의 검정에 대한 사후검정을 실시하고, 평균의 차이가 존재하지 않다고 판단할 수 있는 조합의 개수를 기술하시오.
4 / 10

12. 요일별 데이터 개수를 구하고 가장 데이터가 적게 들어있는 요일을 기술하시오.
[query executor] select wday, count(1) wday_cnt from ggggg group by wday
5
[cross table]로도 구분해 보도록 하자

13. 주중과 주말을 구분하는 [wend] 변수를 생성하시오.
[query execute] select case when wday = 0 or wday = 6 then 1 else 0 end

14. [registered] 값이 주중과 주말에 따라 그 평균값의 차이가 있는지 알아보고자 한다.
    위 조건에 해당하는 검정을 실시하고 그 검정의 통계량을 반올림하여 소수점 첫 째 자리까지 기술하시오.
(단, 요일에 따른 데이터는 독립으로 본다.)
[two sample t test]  -14.3
factor  = wend, 

